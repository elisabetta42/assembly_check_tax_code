.data 
str_Fiscal:
          .byte  # make space in the memory for a word with address str_Fiscal
message:.asciiz "\Enter codice fiscale (in capital letters):\ "
result:.asciiz " \n this is your result: "
errorMessage:.asciiz "\nThis is NOT a codice fiscale"
messageCorrect:.asciiz "\nThis codice fiscale is correct"
repeat_input:.asciiz "\n This is what you typed in: "
tableeven:.byte 0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25 #table with the value for the digits in the even position
tableodd:.byte 1,0,5,7,9,13,15,17,19,21,1,0,5,7,9,13,15,17,19,21,2,4,18,20,11,3,6,8,12,14,16,10,22,25,24,23 #table with the value in the odd position
hexadigits: .byte '0','1','2','3','4','5','6','7','8','9', 'A', 'B', 'C', 'D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z' #table for corrispondence
CheckTable: .byte 'A', 'B', 'C', 'D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'#table to check value

code:.space 17


 
 .text
 
 main: 
 la, $a0, message #load adress of the message insert from the user
 li $v0,4 #4 opcode for printing a string
 syscall #read register $v0 for opcode
 la $a0, str_Fiscal #set $a0 to point to the space allocate in the memory(line 11)
 la $a1, 17 #$a1 = maximum number of characters to read
 li $v0, 8 #opcode for taking a string for the user and place it in a0
 
 syscall
 la $a0, repeat_input #load adress
 li $v0, 4 # 4=print
 
 syscall
 la $a0, message 
 li $v0, 4 
 
 syscall
 
 addi $t3, $zero, 0 #put the index into $t3  int i=0;
 addi $t5, $zero, 15 #str_Fiscal.length


 start_externalLoop:
 addi $t4, $zero,0 #set j=0;
 lb $t1,str_Fiscal($t3) #load byte        str_Fiscal[i]
 
 start_internalLoop:
 lb $t6, hexadigits($t4) # hexadigits[j]
 beq $t1, $t6, end_internalLoop#if the two charachter are equal, the loop stops
 addi $t4, $t4, 1 #j++
 j start_internalLoop
end_internalLoop:

rem $t7,$t3,2 #i% 2 to understand if it is even or odd
 beq $t7, 0, sumodd
  j sumeven
  
 return_sum:

addi $t3, $t3, 1 #i++
bne $t5, $t3, start_externalLoop
 

rem $t8, $t8,26
la, $a0, result #upload the result
li $v0,4 #4 opcode for printing a string
syscall

move  $a0, $t8
li $v0, 1#opcode for printing an integer
syscall

addi $t9, $zero, 15
lb $a0, CheckTable($t8)	
lb $a1, str_Fiscal($t9)
beq $a0,$a1, print

 
 
 la $a0, errorMessage
 li $v0, 4 
 syscall


finish:

li, $v0, 10
syscall

sumodd:
lb $t2,tableodd($t4)
add $t8, $t8,$t2
j return_sum

sumeven:
lb $t9, tableeven($t4)
add $t8, $t8, $t9
j return_sum

print:
 
 la $a0, messageCorrect
 li $v0, 4 
 syscall
 j finish

 


 
 

 
 
 
 
 
 


